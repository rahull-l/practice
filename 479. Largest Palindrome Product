class Solution {
    public int largestPalindrome(int n) {
        if (n == 1) return 9;
        int upper = (int)Math.pow(10, n) - 1;
        int lower = (int)Math.pow(10, n - 1);
        
        for (int i = upper; i >= lower; i--) {
            long palindrome = createPalindrome(i);
            for (long j = upper; j * j >= palindrome; j--) {
                if (palindrome % j == 0) {
                    long other = palindrome / j;
                    if (other >= lower && other <= upper) {
                        return (int)(palindrome % 1337);
                    }
                }
            }
        }
        return 0;
    }
    

    private long createPalindrome(int half) {
        String str = Integer.toString(half);
        StringBuilder sb = new StringBuilder(str);
        String rev = sb.reverse().toString();
        return Long.parseLong(str + rev);
    }
}
