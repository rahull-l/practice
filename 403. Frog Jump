class Solution {
    public boolean canCross(int[] stones) {
        int n = stones.length;
        Map<Integer, Set<Integer>> dp = new HashMap<>();
        
        for (int stone : stones) {
            dp.put(stone, new HashSet<>());
        }
        
        dp.get(0).add(0); // Starting point: no jump yet
        
        for (int stone : stones) {
            for (int step : dp.get(stone)) {
                for (int jump = step - 1; jump <= step + 1; jump++) {
                    if (jump > 0) {
                        int reach = stone + jump;
                        if (reach == stones[n - 1]) return true; // reached last stone
                        if (dp.containsKey(reach)) {
                            dp.get(reach).add(jump);
                        }
                    }
                }
            }
        }
        
        return false;
    }
}
